{
	"info": {
		"_postman_id": "84f38139-eced-404f-93fb-68299adf57af",
		"name": "radish-api-integration-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "myPublicKey",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e585b4ef-2ffb-438b-a5d6-7c860856e85d",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var res = JSON.parse(responseBody);",
							"",
							"pm.test('should return a valid response', () => {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test('should return signatureVerification', () => {",
							"    pm.expect(res.data.myPublicKey).to.exist;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query{\n  myPublicKey\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:8001/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8001",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "generateSignature",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "60014e5f-5b0e-42c8-b94c-2fbd0fab8c40",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var res = JSON.parse(responseBody);",
							"",
							"pm.test('should return a valid response', () => {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test('should return signatureVerification', () => {",
							"    pm.expect(res.data.signature).to.exist;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query($hashInHex:String!){\n\tsignature(\n  hashInHex: $hashInHex\n  )\n}",
						"variables": "{\n\t\"hashInHex\": \"0xe6498a0c326ac8905f9e0ed941e6760e4fca0c900d2c97e335c6d11d7dbf75b6\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:8001/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8001",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "verifySignature",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "deefbcbe-0c24-48cc-8764-644867bb8610",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var res = JSON.parse(responseBody);",
							"",
							"pm.test('should return a valid response', () => {",
							"    pm.response.to.not.be.error;",
							"    pm.response.to.be.ok;",
							"    pm.response.to.be.withBody;",
							"    pm.response.to.be.json;",
							"});",
							"",
							"pm.test('should return signatureVerification', () => {",
							"    pm.expect(res.data.signatureVerification).to.exist;",
							"});",
							"",
							"pm.test('should return true for signature verification', () => {",
							"    pm.expect(res.data.signatureVerification).to.equal(\"true\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query{\n\tsignatureVerification(publicKey: \"b2490923470a273c00ddd471a4037f77c4521ce3410caca594e79abfdb0c26e3\",\n  hashInHex: \"0xe6498a0c326ac8905f9e0ed941e6760e4fca0c900d2c97e335c6d11d7dbf75b6\",\n  signature: \"A8225E28A039EC352991930CA343B32E53286CAE1C3ABEA1AD533047DDBC1BEDC00D65920F729EAAC9F019F1F4246A2905E2C5CB7305033D2267660744468E03\")\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:8001/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8001",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		}
	]
}