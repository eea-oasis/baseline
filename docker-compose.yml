version: '3'

services:
  sol-compile:
    build: ./
    command: build:watch
    volumes:
      - ./contracts:/app/contracts:delegated
      - ./artifacts:/app/artifacts:cached
    networks:
      - network-buyer
      - network-supplier1
      - network-supplier2

  jest:
    build: ./
    command: test:watch
    volumes:
      - ./contracts:/app/contracts:delegated
      - ./artifacts:/app/artifacts:delegated
      - ./.babelrc:/app/.babelrc:delegated
      - ./compiler.json:/app/compiler.json:delegated
    networks:
      - network-buyer
      - network-supplier1
      - network-supplier2
    depends_on:
      - ganache

  ganache:
    image: trufflesuite/ganache-cli:v6.7.0
    command: ganache-cli -m 'candy maple cake sugar pudding cream honey rich smooth crumble sweet treat' --db='/chaindata' --defaultBalanceEther 10000 --account="0x5aaa244692f54da4335a8553249b0db34316fbbc6ec353e1404cf77c415e59e8, 1000000000000000000000" --account="0x70441f8ed88f91416fbe21aa007357354e9bc30236211eda0022bdfb27beb227, 1000000000000000000000" --account="0x9ff4f711a85ed35d2cc66323abcd83f41e5981e0cd395800a262beb9a92b8abf, 1000000000000000000000" --account="0x77e701995d56e775bbb06559ece7d7352157106bbadc6aa5d8781c86c8d824bd, 1000000000000000000000" --networkId '333' --gasLimit 80000000000
    ports:
      - 8545:8545
    networks:
      - network-buyer
      - network-supplier1
      - network-supplier2
    volumes:
      - chaindata:/chaindata

  radish-zok:
    build:
      context: ./zok/
      dockerfile: dev.Dockerfile
    command: npm run dev
    volumes:
      - ./zok/code:/app/code:delegated
      - ./zok/src:/app/src:delegated
      - ./zok/dist:/app/dist:delegated
      - ./zok/output:/app/output:delegated
    environment:
      PROVING_SCHEME: 'g16'
      VIRTUAL_HOST: radish-zok.docker
      MONGO_URL: mongodb://mongo-buyer
      MONGO_DB_NAME: 'radish34'
      MONGO_CONNECTION_RETRIES: 5
    depends_on:
      - radish-zok-watch
      - mongo-buyer
    networks:
      - network-buyer
      - network-supplier1
      - network-supplier2
    ports:
      - 8080:80

  radish-zok-watch:
    build:
      context: ./zok/
      dockerfile: dev.Dockerfile
    volumes:
      - ./zok/src:/app/src:delegated
      - ./zok/dist:/app/dist:delegated
    networks:
      - network-buyer
      - network-supplier1
      - network-supplier2
    command: npm run build:watch
      
  radish34-ui:
    build:
      context: ./ui/
      dockerfile: dev.Dockerfile
    volumes:
      - ./ui/src:/app/src:delegated
      - ./ui/.env:/app/.env:delegated
      - ./ui/public/index.html:/app/public/index.html:delegated
      - ./ui/public/favicon.ico:/app/public/favicon.ico:delegated
      - ./ui/public/config.js:/app/public/config.js:delegated
      - ./ui/public/manifest.json:/app/public/manifest.json:delegated
      - ./ui/public/logo.svg:/app/public/logo.svg:delegated
      - ./ui/public/images:/app/public/images:delegated
      - ./ui/public/fonts:/app/public/fonts:delegated
    environment:
      VIRTUAL_HOST: radish34-ui.docker
    networks:
      - network-buyer
      - network-supplier1
      - network-supplier2
    logging:
      options:
        max-size: 10m

  radish-deploy:
    build:
      context: ./radish-deploy/
    depends_on:
      - ganache
      - messenger-buyer
      - messenger-supplier1
      - messenger-supplier2
      - mongo-buyer
      - mongo-supplier1
      - mongo-supplier2
    environment:
      RPC_PROVIDER: http://ganache:8545
      MESSENGER_BUYER_URI: http://messenger-buyer:4001/api/v1
      MESSENGER_SUPPLIER1_URI: http://messenger-supplier1:4001/api/v1
      MESSENGER_SUPPLIER2_URI: http://messenger-supplier2:4001/api/v1
    networks:
      - network-buyer
      - network-supplier1
      - network-supplier2
    volumes:
      - ./radish-deploy/src:/app/src:delegated
      - ./radish-deploy/package.json:/app/package.json:delegated
      - ./artifacts:/app/artifacts:delegated
      - ./config/keystore:/keystore:delegated
      - ./config:/app/src/config

  radish-api-buyer:
    container_name: radish-api-buyer
    build:
      context: ./radish-api/
      dockerfile: dev.Dockerfile
    command: npm run dev
    restart: on-failure
    volumes:
      - ./radish-api/dist:/app/dist:delegated
      - ./radish-api/package.json:/app/package.json:delegated
      - ./config/keystore/buyer.eth:/keystore/account.eth
      # - ./config/keystore:/keystore
      - ./config/config-buyer.json:/app/config/default.json
      - ./artifacts:/app/artifacts:delegated
    depends_on:
      - radish-api-watch
      - mongo-buyer
      - ganache
      - messenger-buyer
    environment:
      VIRTUAL_HOST: radish-api-buyer.docker
      MONGO_URL: mongodb://mongo-buyer
      MONGO_DB_NAME: 'radish34'
      MONGO_CONNECTION_RETRIES: 5
      MESSENGER_URI: 'http://messenger-buyer:4001/api/v1'
    networks:
      - network-buyer
    ports:
      - 8001:8001
      - 8101:8101

  radish-api-supplier1:
    container_name: radish-api-supplier1
    build:
      context: ./radish-api/
      dockerfile: dev.Dockerfile
    command: npm run dev
    restart: on-failure
    volumes:
      - ./radish-api/dist:/app/dist:delegated
      - ./radish-api/package.json:/app/package.json:delegated
      - ./config/keystore/supplier1.eth:/keystore/account.eth
      - ./config/config-supplier1.json:/app/config/default.json
      - ./artifacts:/app/artifacts:delegated      
    depends_on:
      - radish-api-watch
      - mongo-supplier1
      - ganache
      - messenger-supplier1
    environment:
      VIRTUAL_HOST: radish-api-supplier1.docker
      MONGO_URL: mongodb://mongo-supplier1
      MONGO_DB_NAME: 'radish34'
      MONGO_CONNECTION_RETRIES: 5
      MESSENGER_URI: 'http://messenger-supplier1:4001/api/v1'
    networks:
      - network-supplier1
    ports:
      - 8002:8001
      - 8102:8101

  radish-api-supplier2:
    container_name: radish-api-supplier2
    build:
      context: ./radish-api/
      dockerfile: dev.Dockerfile
    command: npm run dev
    restart: on-failure
    volumes:
      - ./radish-api/dist:/app/dist:delegated
      - ./radish-api/package.json:/app/package.json:delegated
      - ./config/keystore/supplier2.eth:/keystore/account.eth
      - ./config/config-supplier2.json:/app/config/default.json
      - ./artifacts:/app/artifacts:delegated      
    depends_on:
      - radish-api-watch
      - mongo-supplier2
      - ganache
      - messenger-supplier2
    environment:
      VIRTUAL_HOST: radish-api-supplier2.docker
      MONGO_URL: mongodb://mongo-supplier2
      MONGO_DB_NAME: 'radish34'
      MONGO_CONNECTION_RETRIES: 5
      MESSENGER_URI: 'http://messenger-supplier2:4001/api/v1'
    networks:
      - network-supplier2
    ports:
      - 8003:8001

  radish-api-watch:
    build:
      context: ./radish-api/
      dockerfile: dev.Dockerfile
    command: npm run build:watch
    volumes:
      - ./radish-api/src:/app/src:delegated
      - ./radish-api/dist:/app/dist:delegated
      - ./config/keystore:/keystore
      - ./config/config.json:/app/config/default.json
    networks:
      - network-buyer
      - network-supplier1
      - network-supplier2
    logging:
      options:
        max-size: 10m

  mongo-buyer:
    image: mongo:latest
    container_name: mongo-buyer
    volumes:
      - mongo-buyer:/data/db
    logging:
      options:
        max-size: 10m
    networks:
      - network-buyer
    ports:
      - 27017:27017
      
  mongo-supplier1:
    image: mongo:latest
    container_name: mongo-supplier1
    volumes:
      - mongo-supplier1:/data/db
    logging:
      options:
        max-size: 10m
    networks:
      - network-supplier1
    ports:
      - 27117:27017

  mongo-supplier2:
    image: mongo:latest
    container_name: mongo-supplier2
    volumes:
      - mongo-supplier2:/data/db
    logging:
      options:
        max-size: 10m
    networks:
      - network-supplier2
    ports:
      - 27217:27017

  mongo-seed:
    build: ./mongo-seed
    networks:
      - network-buyer
      - network-supplier1
      - network-supplier2
    links:
      - mongo-buyer
      - mongo-supplier1
      - mongo-supplier2

  geth-bootnode:
    hostname: geth-bootnode
    container_name: geth-bootnode
    environment:
      - VIRTUAL_HOST=geth-bootnode.docker
      - nodekeyhex=08f0e1dee5c1b4645f3331a566009e41a4514b6cd28656d63d0449ecf812812b #Needs to be fix, so that the miners know the resulting enode id
    build:
      context: ./geth-env
      dockerfile: ./bootnode/Dockerfile
    networks:
      - network-buyer
      - network-supplier1
      - network-supplier2
      - network-geth
    ports:
      - 30301:30301/udp

  geth-miner1:
    hostname: geth-miner1
    container_name: geth-miner1
    depends_on:
      - geth-bootnode
    environment:
      - VIRTUAL_HOST=geth-miner1.docker
      - nodekeyhex=8eb666d3e8a42bfc7d9e829af60b6d9142d65bef1ecb5897622b4c3ef93377e2 # sets the enode so we can use static-nodes.json to add as peer
      - address=0x8cc5a1a0802db41db826c2fcb72423744338dcb0 # derived from the private key which is passed in the args
      - bootnodeId=76a8171707eca17647a47ca99ffd348927dfa60102792ea349a25d5192e61855be83b786e376276a306afcceea4ffd1c9c77e4370b417efc39f328a0d068004c #derived from the nodekeyhex of the bootnode
      - bootnodeIp=172.25.0.101
    ports:
      - 8544:8545/tcp
    networks:
      - network-buyer
      - network-supplier1
      - network-supplier2
      - network-geth
    build:
      context: ./geth-env
      dockerfile: ./miner/Dockerfile
      args:
        privatekey: df504d175ae63abf209bad9dda965310d99559620550e74521a6798a41215f46 # Please don't do something like this in production, okay?
        password: pass

  geth-miner2:
    hostname: geth-miner2
    container_name: geth-miner2
    depends_on:
      - geth-miner1
    environment:
      - nodekeyhex=8861389742e9ee2669855a4928a712cec0f275241a359647772df689840c3c6c # sets the enode so we can use static-nodes.json to add as peer
      - address=0x3590aca93338b0721966a8d0c96ebf2c4c87c544 # derived from the private key which is passed in the args
      - bootnodeId=76a8171707eca17647a47ca99ffd348927dfa60102792ea349a25d5192e61855be83b786e376276a306afcceea4ffd1c9c77e4370b417efc39f328a0d068004c #derived from the nodekeyhex of the bootnode
      - bootnodeIp=172.25.0.101
    ports:
      - 8542:8545/tcp
    networks:
      - network-buyer
      - network-supplier1
      - network-supplier2
      - network-geth
    build:
      context: ./geth-env
      dockerfile: ./miner/Dockerfile
      args:
        privatekey: bc5b578e0dcb2dbf98dd6e5fe62cb5a28b84a55e15fc112d4ca88e1f62bd7c35
        password: word

  geth-node:
    hostname: geth-node
    container_name: geth-node
    depends_on:
       - geth-miner1
    environment:
      VIRTUAL_HOST: geth-node.docker
      nodeType: full
      address: '0x3590aca93338b0721966a8d0c96ebf2c4c87c544' # derived from the private key which is passed in the args
      bootnodeId: 76a8171707eca17647a47ca99ffd348927dfa60102792ea349a25d5192e61855be83b786e376276a306afcceea4ffd1c9c77e4370b417efc39f328a0d068004c # derived from the nodekeyhex of the bootnode
      bootnodeIp: geth-bootnode
    build:
      context: ./geth-env
      dockerfile: ./node/Dockerfile
      args:
        privatekey: bc5b578e0dcb2dbf98dd6e5fe62cb5a28b84a55e15fc112d4ca88e1f62bd7c35
        password: word
    networks:
      - network-buyer
      - network-supplier1
      - network-supplier2
      - network-geth
    ports:
       - 8547:8545
       - 8548:8546
    healthcheck:
      test: wget http://localhost:8545
      interval: 2s
      timeout: 5s
      retries: 30

  messenger-buyer:
    hostname: messenger-buyer
    container_name: messenger-buyer
    links:
      - mongo-buyer
      - geth-node
    build:
      context: ./messenger
      dockerfile: ./Dockerfile
    environment:
      VIRTUAL_HOST: messenger-buyer.docker
      MONGO_URL: mongodb://mongo-buyer
      RADISH_API_URL: http://radish-api-buyer:8101/api/v1
    networks:
      - network-buyer
    ports:
     - 4001:4001

  messenger-supplier1:
    hostname: messenger-supplier1
    container_name: messenger-supplier1
    links:
      - mongo-supplier1
      - geth-node
    build:
      context: ./messenger
      dockerfile: ./Dockerfile
    environment:
      VIRTUAL_HOST: messenger-supplier1.docker
      MONGO_URL: mongodb://mongo-supplier1
      RADISH_API_URL: http://radish-api-supplier1:8101/api/v1
    networks:
      - network-supplier1
    ports:
     - 4002:4001

  messenger-supplier2:
    hostname: messenger-supplier2
    container_name: messenger-supplier2
    links:
      - mongo-supplier2
      - geth-node
    build:
      context: ./messenger
      dockerfile: ./Dockerfile
    environment:
      VIRTUAL_HOST: messenger-supplier2.docker
      MONGO_URL: mongodb://mongo-supplier2
      RADISH_API_URL: http://radish-api-supplier2:8101/api/v1
    networks:
      - network-supplier2
    ports:
      - 4003:4001

volumes:
  mongo-buyer:
  mongo-supplier1:
  mongo-supplier2:
  chaindata:

networks:
  network-buyer:
  network-supplier1:
  network-supplier2:
  network-geth:
